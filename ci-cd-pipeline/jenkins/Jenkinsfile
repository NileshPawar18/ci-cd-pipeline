pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'yourdockerhubusername/cicd-flask-app'
        EC2_USER = 'ec2-user'
        EC2_HOST = 'your-ec2-ip'
    }

    stages {
        stage('Clone Code') {
            steps {
                git 'https://github.com/yourgithubusername/ci-cd-pipeline.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Login to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh 'echo $PASS | docker login -u $USER --password-stdin'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                sh 'docker push $DOCKER_IMAGE'
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['ec2-key']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST '
                      docker pull $DOCKER_IMAGE &&
                      docker stop flask-app || true &&
                      docker rm flask-app || true &&
                      docker run -d -p 5000:5000 --name flask-app $DOCKER_IMAGE
                    '
                    '''
                }
            }
        }
    }
}